body {
    background-color:#060AB2;
    display: flex;
    height: 100vh;

}

* {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

.memory-game {
    width: 640px;
    height: 640px;
    margin: auto;
    display: flex;
    flex-wrap: wrap;
    perspective: 1000px;
}
/* To produce the 3D flip effect, we will add the perspective property to .memory-game. That property sets how far in the z plane the object is from the user. The lower the value the bigger the perspective effect. For a subtle effect, let’s apply 1000px: */


.memory-card {
    width: calc(25% - 10px);
    height: calc(33.333% - 10px);
    margin: 5px;
    position: relative;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, .3);
    transform: scale(1);
    transform-style: preserve-3d;
    transition: transform .5s;
   
}

/* To the .memory-card elements let’s add transform-style: preserve-3d, to position them in the 3D space created in the parent, instead of flattening it to the z = 0 plane (transform-style). */



/* :active pseudo class will be triggered every time the element gets clicked and will apply a .2s transition to its size: */

.memory-card:active {
    transform: scale(0.97);
    transition: transform .2s;
}

.front-face,
.back-face {
    width: 100%;
    height: 100%;
    padding: 20px;
    position: absolute;
    border-radius: 5px;
    background: #1C7CCC;
    backface-visibility: hidden;
}

.front-face {
    transform: rotateY(180deg);
}
/* flip section */

.memory-card.flip {
    transform: rotateY(180deg);
}